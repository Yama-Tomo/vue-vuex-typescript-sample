version: 2.1

parameters:
  run_api_trigger_jobs:
    type: boolean
    default: false

commands:
  yarn_install:
    steps:
      - restore_cache:
          keys:
            - nuxt-node-modules-v2-{{ checksum "yarn.lock" }}
      - run:
          command: |
            [ "`which yarn`" != "" ] && yarn || true
  save_node_module_cache:
    steps:
      - save_cache:
          key: nuxt-node-modules-v2-{{ checksum "yarn.lock" }}
          paths: node_modules
  setup_git_lfs:
    steps:
      - restore_cache:
          keys:
            - git-lfs--v2.8.0
      - run:
          name: setup git lfs
          command: |
            if [ ! -e ~/bin/git-lfs ]; then
              curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
              sudo apt-get install -y git-lfs
              cp -a /usr/bin/git-lfs ~/bin
            fi
            git lfs install
            git lfs pull
      - save_cache:
          key: git-lfs--v2.8.0
          paths: ~/bin/git-lfs

jobs:
  lint:
    working_directory: /home/circleci/project
    docker:
      - image: node:12.6-alpine
    steps:
      - run: ':' # declared noop command because in order to use the conditional step need one or more tasks or the when statement
      - unless:
          condition: << pipeline.parameters.run_api_trigger_jobs >>
          steps:
            - checkout
            - run:
                name: install depend packages
                command: apk add --no-cache --update ca-certificates
            - yarn_install
            - run:
                command: yarn lint .
            - save_node_module_cache

  test:
    machine: true
    steps:
      - run: ':'
      - unless:
          condition: << pipeline.parameters.run_api_trigger_jobs >>
          steps:
            - checkout
            - setup_git_lfs
            - run:
                name: fetch visual testing expect files
                command: |
                  git fetch origin nuxt
                  mkdir __temp
                  git archive origin/nuxt:__tests__ | tar -x -C __temp
                  find __temp -type f | grep -v  -e '__snapshots__' -e '__image_snapshots__' | xargs rm -f
                  cp -a __temp/* __tests__/
                  rm -rf __temp
            - yarn_install
            - run:
                name: jest
                command: |
                  TEST_ARGS="-i --silent --ci --coverage --reporters=jest-junit"
                  [ "$CIRCLE_BRANCH" = "nuxt" ] && TEST_ARGS="$TEST_ARGS -u"
                  export TEST_ARGS

                  JEST_JUNIT_OUTPUT=reports/jest/results.xml \
                  LOCAL_UID=$(id -u $USER) LOCAL_GID=$(id -g $USER) \
                  docker-compose -f docker-compose-circleci.yml run --rm puppeteer
            - run:
                command: rm -rf storybook-static # not store artifact on fail test
                when: on_fail
            - save_node_module_cache
            - store_test_results:
                path: reports
            - store_artifacts:
                path: __tests__/storyshots/__image_snapshots__/__diff_output__
                destination: /fail_images
            - store_artifacts:
                path: storybook-static
                destination: /storybook

  something:
    docker:
      - image: node:12.6-alpine
    steps:
      - run: ':'
      - when:
          condition: << pipeline.parameters.run_api_trigger_jobs >>
          steps:
            - run: echo "run something"

workflows:
  build:
    jobs:
      - lint
      - test
  ## how to trigger bellow workflow
  # curl -u ${TOKEN}: --header 'Content-Type: application/json' -X POST -d '{"parameters": {"run_api_trigger_jobs": true}, "branch": "'${BRANCH}'"}' https://circleci.com/api/v2/project/gh/Yama-Tomo/vue-vuex-typescript-sample/pipeline
  trigger_api:
    jobs:
      - something
